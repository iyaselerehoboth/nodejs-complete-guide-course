{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","react_default","a","createElement","react","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","Object","toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle_MobileToggle","onOpenMobileNav","Logo_Logo","NavigationItems_NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button_Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop_Backdrop","onHandle","Modal_Modal","message","post","author","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","objectSpread","defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","onFinishEdit","inherits","createClass","prevProps","editing","selectedPost","imagePath","Input_Input","bind","FilePicker","Image_Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","page","fetch","res","Error","json","resData","totalItems","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","startEditPostHandler","postId","find","p","_id","cancelEditHandler","finishEditHandler","postData","url","creator","createdAt","updatedPosts","findIndex","statusInputChangeHandler","deletePostHandler","_this2","_this3","ErrorHandler","Feed_FeedEdit_FeedEdit","onSubmit","textAlign","marginTop","Loader_Loader","Paginator_Paginator","Math","ceil","Post_Post","name","Date","toLocaleDateString","SinglePost","match","params","Login","loginForm","password","inputChangeHandler","Login_createForOfIteratorHelper","Auth_Auth","onLogin","Signup","signupForm","Signup_createForOfIteratorHelper","onSignup","App","showBackdrop","showMobileNav","token","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","setItem","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","history","replace","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","Switch","Route","path","render","Auth_Login","assign","Auth_Signup","Redirect","pages_Feed_Feed","Feed_SinglePost_SinglePost","Layout_Layout","Toolbar_Toolbar","MainNavigation_MainNavigation","MobileNavigation_MobileNavigation","withRouter","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.da948799.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  image: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required]\n  },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imagePath,\n          valid: true\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from 'react';\n\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({\n          posts: resData.posts,\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    // Set up data (with image!)\n    let url = 'URL';\n    if (this.state.editPost) {\n      url = 'URL';\n    }\n\n    fetch(url)\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n        this.setState(prevState => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              p => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else if (prevState.posts.length < 2) {\n            updatedPosts = prevState.posts.concat(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState(prevState => {\n          const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n          return { posts: updatedPosts, postsLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    fetch('URL')\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch status');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({\n          title: resData.post.title,\n          author: resData.post.creator.name,\n          date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.post.content\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\nimport LoginPage from './pages/Auth/Login';\nimport SignupPage from './pages/Auth/Signup';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: true,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = isOpen => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n  };\n\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    fetch('URL')\n      .then(res => {\n        if (res.status === 422) {\n          throw new Error('Validation failed.');\n        }\n        if (res.status !== 200 && res.status !== 201) {\n          console.log('Error!');\n          throw new Error('Could not authenticate you!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({\n          isAuth: true,\n          token: resData.token,\n          authLoading: false,\n          userId: resData.userId\n        });\n        localStorage.setItem('token', resData.token);\n        localStorage.setItem('userId', resData.userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem('expiryDate', expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    fetch('URL')\n      .then(res => {\n        if (res.status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (res.status !== 200 && res.status !== 201) {\n          console.log('Error!');\n          throw new Error('Creating a user failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace('/');\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err\n        });\n      });\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={props => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={props => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={props => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}